version: '3.8'

services:
  # API Gateway
  api-gateway:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - text-engine
      - image-generator
      - video-processor
      - user-management
    networks:
      - creative-net

  # Text Creation Engine
  text-engine:
    build:
      context: ./services/text-engine
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_CONNECTION_STRING=mongodb://mongodb:27017/text_engine
    depends_on:
      - mongodb
      - redis
    networks:
      - creative-net

  # Image Generation Service
  image-generator:
    build:
      context: ./services/image-generator
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - PYTHON_ENV=development
      - STABILITY_API_KEY=${STABILITY_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - minio
    networks:
      - creative-net

  # Video Processing Service
  video-processor:
    build:
      context: ./services/video-processor
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - PYTHON_ENV=development
      - RABBITMQ_HOST=rabbitmq
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    depends_on:
      - rabbitmq
      - minio
    networks:
      - creative-net

  # User Management Service
  user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=${JWT_SECRET}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=userdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - creative-net

  # Web Frontend
  web-frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - api-gateway
    networks:
      - creative-net

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - creative-net

  # MongoDB Database
  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - creative-net

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - creative-net

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - creative-net

  # MinIO Object Storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - creative-net

volumes:
  postgres_data:
  mongodb_data:
  minio_data:

networks:
  creative-net:
    driver: bridge 